{"version":3,"sources":["components/Card.tsx","components/CardList.tsx","components/SearchBox.tsx","components/Scroll.tsx","containers/App.tsx","index.tsx"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","key","SearchBox","change","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","useState","setRobots","search","setSearch","loading","setLoading","getRobots","a","fetch","res","json","useEffect","filteredRobots","filter","robot","toLocaleLowerCase","includes","e","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAeeA,EAZe,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5C,OACE,yBAAKC,UAAU,uDACb,yBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,WACzD,6BACE,4BAAKL,GACL,2BAAIC,MCYGK,EAjB0B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1C,OACE,6BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,aCGdW,G,MAb6B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,yBAAKV,UAAU,OACb,2BACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCGHI,EAVuB,SAACC,GACrC,OACE,yBACEC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAE/DJ,EAAMK,WC4BEC,MA9Bf,WAAgB,IAAD,EACeC,mBAAkB,IADjC,mBACNlB,EADM,KACEmB,EADF,OAEeD,mBAAiB,IAFhC,mBAENE,EAFM,KAEEC,EAFF,OAGiBH,oBAAkB,GAHnC,mBAGNI,EAHM,KAGGC,EAHH,KAIPC,EAAS,uCAAG,8BAAAC,EAAA,6DAChBF,GAAW,GADK,SAEEG,MAAM,8CAFR,cAEVC,EAFU,gBAGGA,EAAIC,OAHP,OAGVA,EAHU,OAIhBT,EAAUS,GACVL,GAAW,GALK,2CAAH,qDAOfM,qBAAU,WACRL,MACC,IACH,IAAMM,EAAiB9B,EAAO+B,QAAO,SAACC,GAAD,OACnCA,EAAMvC,KAAKwC,oBAAoBC,SAASd,MAE1C,OAAOE,EACL,uCAEA,yBAAK1B,UAAU,MACb,wBAAIA,UAAU,MAAd,gBACA,kBAAC,EAAD,CAAWU,OAAQ,SAAC6B,GAAD,OAAOd,EAAUc,EAAEC,OAAOC,UAC7C,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUrC,OAAQ8B,O,MCxB1BQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.672a5b24.chunk.js","sourcesContent":["import React from \"react\";\nimport { Robot } from \"../interfaces/robot\";\n\nconst Card: React.FC<Robot> = ({ name, email, id }) => {\n  return (\n    <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\" />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { CardListType } from \"../interfaces/robot\";\nimport Card from \"./Card\";\n\nconst CardList: React.FC<CardListType> = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\nimport { SearchBoxProps } from \"../interfaces/robot\";\n\nconst SearchBox: React.FC<SearchBoxProps> = ({ change }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={change}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport { ScrollProps } from \"../interfaces/robot\";\n\nconst Scroll: React.FC<ScrollProps> = (props) => {\n  return (\n    <div\n      style={{ overflow: \"scroll\", border: \"5px solid black\", height: \"800px\" }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { useEffect, useState } from \"react\";\nimport { Robot } from \"../interfaces/robot\";\nimport CardList from \"../components/CardList\";\nimport \"./App.css\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nfunction App() {\n  const [robots, setRobots] = useState<Robot[]>([]);\n  const [search, setSearch] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const getRobots = async () => {\n    setLoading(true);\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const json = await res.json();\n    setRobots(json);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getRobots();\n  }, []);\n  const filteredRobots = robots.filter((robot) =>\n    robot.name.toLocaleLowerCase().includes(search)\n  );\n  return loading ? (\n    <h1>Loading</h1>\n  ) : (\n    <div className=\"tc\">\n      <h1 className=\"f1\">RobotFriends</h1>\n      <SearchBox change={(e) => setSearch(e.target.value)} />\n      <Scroll>\n        <CardList robots={filteredRobots} />\n      </Scroll>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}